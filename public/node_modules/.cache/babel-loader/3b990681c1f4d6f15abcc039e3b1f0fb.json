{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hugo\\\\Documents\\\\GitHub\\\\rest-api-country\\\\src\\\\componentes\\\\allCountries.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst url = \"https://restcountries.com/v2/all\";\n\nconst AllCountries = () => {\n  _s();\n\n  const [countries, setCountries] = useState([]);\n  const [Filtered, setFiltered] = useState([]);\n  const [Search, setSearchInput] = useState(\"\");\n  const [isLoading, setLoading] = useState(true);\n\n  const fetcCountries = async () => {\n    const response = await fetch(url);\n    const countries = await response.json();\n    setCountries(countries);\n  };\n\n  useEffect(() => {\n    fetcCountries();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"grid\",\n      children: countries.map(country => {\n        const {\n          name,\n          population,\n          region,\n          capital,\n          flag,\n          numericCode\n        } = country;\n        return /*#__PURE__*/_jsxDEV(\"article\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: flag,\n              alt: \"name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"details\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: [\"Popula\\xE7\\xE3o: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\" \", population]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 36,\n                  columnNumber: 32\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: [\"Regi\\xE3o: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: region\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 39,\n                  columnNumber: 29\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: [\"Capital: \", capital]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, this)\n        }, numericCode, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(AllCountries, \"HjN5dMra4jdt3wlcAM5BljiWaqs=\");\n\n_c = AllCountries;\nexport default AllCountries;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllCountries\");","map":{"version":3,"names":["React","useState","useEffect","url","AllCountries","countries","setCountries","Filtered","setFiltered","Search","setSearchInput","isLoading","setLoading","fetcCountries","response","fetch","json","map","country","name","population","region","capital","flag","numericCode"],"sources":["C:/Users/Hugo/Documents/GitHub/rest-api-country/src/componentes/allCountries.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst url = \"https://restcountries.com/v2/all\";\r\n\r\nconst AllCountries = () => {\r\n  const [countries, setCountries] = useState([]);\r\n\r\n  const [Filtered, setFiltered] = useState([]);\r\n  const [Search, setSearchInput] = useState(\"\");\r\n  const [isLoading, setLoading] = useState(true);\r\n\r\n  const fetcCountries = async () => {\r\n    const response = await fetch(url);\r\n    const countries = await response.json();\r\n    setCountries(countries);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetcCountries();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <section className=\"grid\">\r\n        {countries.map((country) => {\r\n          const { name, population, region, capital, flag, numericCode } =\r\n            country;\r\n\r\n          return (\r\n            <article key={numericCode}>\r\n              <div>\r\n                <img src={flag} alt=\"name\" />\r\n                <div className=\"details\">\r\n                  <h3>{name}</h3>\r\n                  <h4>\r\n                    População: <span> {population}</span>{\" \"}\r\n                  </h4>\r\n                  <h4>\r\n                    Região: <span>{region}</span>{\" \"}\r\n                  </h4>\r\n                  <h4>Capital: {capital}</h4>\r\n                </div>\r\n              </div>\r\n            </article>\r\n          );\r\n        })}\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AllCountries;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAEA,MAAMC,GAAG,GAAG,kCAAZ;;AAEA,MAAMC,YAAY,GAAG,MAAM;EAAA;;EACzB,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,EAAD,CAA1C;EAEA,MAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACQ,MAAD,EAASC,cAAT,IAA2BT,QAAQ,CAAC,EAAD,CAAzC;EACA,MAAM,CAACU,SAAD,EAAYC,UAAZ,IAA0BX,QAAQ,CAAC,IAAD,CAAxC;;EAEA,MAAMY,aAAa,GAAG,YAAY;IAChC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACZ,GAAD,CAA5B;IACA,MAAME,SAAS,GAAG,MAAMS,QAAQ,CAACE,IAAT,EAAxB;IACAV,YAAY,CAACD,SAAD,CAAZ;EACD,CAJD;;EAMAH,SAAS,CAAC,MAAM;IACdW,aAAa;EACd,CAFQ,EAEN,EAFM,CAAT;EAIA,oBACE;IAAA,uBACE;MAAS,SAAS,EAAC,MAAnB;MAAA,UACGR,SAAS,CAACY,GAAV,CAAeC,OAAD,IAAa;QAC1B,MAAM;UAAEC,IAAF;UAAQC,UAAR;UAAoBC,MAApB;UAA4BC,OAA5B;UAAqCC,IAArC;UAA2CC;QAA3C,IACJN,OADF;QAGA,oBACE;UAAA,uBACE;YAAA,wBACE;cAAK,GAAG,EAAEK,IAAV;cAAgB,GAAG,EAAC;YAApB;cAAA;cAAA;cAAA;YAAA,QADF,eAEE;cAAK,SAAS,EAAC,SAAf;cAAA,wBACE;gBAAA,UAAKJ;cAAL;gBAAA;gBAAA;gBAAA;cAAA,QADF,eAEE;gBAAA,6CACa;kBAAA,gBAAQC,UAAR;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA,QADb,EACwC,GADxC;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAFF,eAKE;gBAAA,uCACU;kBAAA,UAAOC;gBAAP;kBAAA;kBAAA;kBAAA;gBAAA,QADV,EACgC,GADhC;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QALF,eAQE;gBAAA,wBAAcC,OAAd;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QARF;YAAA;cAAA;cAAA;cAAA;YAAA,QAFF;UAAA;YAAA;YAAA;YAAA;UAAA;QADF,GAAcE,WAAd;UAAA;UAAA;UAAA;QAAA,QADF;MAiBD,CArBA;IADH;MAAA;MAAA;MAAA;IAAA;EADF,iBADF;AA4BD,CA7CD;;GAAMpB,Y;;KAAAA,Y;AA+CN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}