{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hugo\\\\Documents\\\\GitHub\\\\rest-api-country\\\\src\\\\componentes\\\\allCountries.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { apiURL } from \"../util/api\";\nimport SearchInput from \"../Search/SearchInput\";\nimport FilterCountry from \"../FilterCountry/FilterCountry\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst url = \"https://restcountries.com/\";\n\nconst AllCountries = () => {\n  _s();\n\n  const [countries, setCountries] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n\n  const getAllCountries = async () => {\n    try {\n      const res = await fetch(`${apiURL}/all`);\n      if (!res.ok) throw new Error(\"Something went wrong!\");\n      const data = await res.json();\n      console.log(data);\n      setCountries(data);\n      setIsLoading(false);\n    } catch (error) {\n      setIsLoading(false);\n      setError(error.message);\n    }\n  };\n\n  const getCountryByName = async countryName => {\n    try {\n      const res = await fetch(`${apiURL}/name/${countryName}`);\n      if (!res.ok) throw new Error(\"Not found any country!\");\n      const data = await res.json();\n      setCountries(data);\n      setIsLoading(false);\n    } catch (error) {\n      setIsLoading(false);\n      setError(error.message);\n    }\n  };\n\n  const getCountryByRegion = async regionName => {\n    try {\n      const res = await fetch(`${apiURL}/region/${regionName}`);\n      if (!res.ok) throw new Error(\"Failed..........\");\n      const data = await res.json();\n      setCountries(data);\n      setIsLoading(false);\n    } catch (error) {\n      setIsLoading(false);\n      setError(false);\n    }\n  };\n\n  useEffect(() => {\n    getAllCountries();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"all__country__wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"country__top\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search\",\n        children: /*#__PURE__*/_jsxDEV(SearchInput, {\n          onSearch: getCountryByName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter\",\n        children: /*#__PURE__*/_jsxDEV(FilterCountry, {\n          onSelect: getCountryByRegion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"country__bottom\",\n      children: [isLoading && !error && /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Loading........\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 33\n      }, this), error && !isLoading && /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 33\n      }, this), countries === null || countries === void 0 ? void 0 : countries.map(country => /*#__PURE__*/_jsxDEV(Link, {\n        to: `/country/${country.name.common}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"country__card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"country__img\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: country.flags.png,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"country__data\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: country.name.common\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n              children: [\" \", \"Population:\", \" \", new Intl.NumberFormat().format(country.population)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n              children: [\" Region: \", country.region]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n              children: [\"Capital: \", country.capital]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AllCountries, \"fhz3OS7BVETzsc7B/TH4r51GfWQ=\");\n\n_c = AllCountries;\nexport default AllCountries;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllCountries\");","map":{"version":3,"names":["React","useState","useEffect","apiURL","SearchInput","FilterCountry","Link","url","AllCountries","countries","setCountries","isLoading","setIsLoading","error","setError","getAllCountries","res","fetch","ok","Error","data","json","console","log","message","getCountryByName","countryName","getCountryByRegion","regionName","map","country","name","common","flags","png","Intl","NumberFormat","format","population","region","capital"],"sources":["C:/Users/Hugo/Documents/GitHub/rest-api-country/src/componentes/allCountries.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { apiURL } from \"../util/api\";\r\n\r\nimport SearchInput from \"../Search/SearchInput\";\r\nimport FilterCountry from \"../FilterCountry/FilterCountry\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst url = \"https://restcountries.com/\";\r\n\r\nconst AllCountries = () => {\r\n  const [countries, setCountries] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const getAllCountries = async () => {\r\n    try {\r\n      const res = await fetch(`${apiURL}/all`);\r\n\r\n      if (!res.ok) throw new Error(\"Something went wrong!\");\r\n\r\n      const data = await res.json();\r\n\r\n      console.log(data);\r\n\r\n      setCountries(data);\r\n\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  const getCountryByName = async (countryName) => {\r\n    try {\r\n      const res = await fetch(`${apiURL}/name/${countryName}`);\r\n\r\n      if (!res.ok) throw new Error(\"Not found any country!\");\r\n\r\n      const data = await res.json();\r\n      setCountries(data);\r\n\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  const getCountryByRegion = async (regionName) => {\r\n    try {\r\n      const res = await fetch(`${apiURL}/region/${regionName}`);\r\n\r\n      if (!res.ok) throw new Error(\"Failed..........\");\r\n\r\n      const data = await res.json();\r\n      setCountries(data);\r\n\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n      setError(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAllCountries();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"all__country__wrapper\">\r\n      <div className=\"country__top\">\r\n        <div className=\"search\">\r\n          <SearchInput onSearch={getCountryByName} />\r\n        </div>\r\n\r\n        <div className=\"filter\">\r\n          <FilterCountry onSelect={getCountryByRegion} />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"country__bottom\">\r\n        {isLoading && !error && <h4>Loading........</h4>}\r\n        {error && !isLoading && <h4>{error}</h4>}\r\n\r\n        {countries?.map((country) => (\r\n          <Link to={`/country/${country.name.common}`}>\r\n            <div className=\"country__card\">\r\n              <div className=\"country__img\">\r\n                <img src={country.flags.png} alt=\"\" />\r\n              </div>\r\n\r\n              <div className=\"country__data\">\r\n                <h3>{country.name.common}</h3>\r\n                <h6>\r\n                  {\" \"}\r\n                  Population:{\" \"}\r\n                  {new Intl.NumberFormat().format(country.population)}\r\n                </h6>\r\n                <h6> Region: {country.region}</h6>\r\n                <h6>Capital: {country.capital}</h6>\r\n              </div>\r\n            </div>\r\n          </Link>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AllCountries;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}